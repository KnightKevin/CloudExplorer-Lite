input {
  file {
    path => ["${CE_BASE}/cloudexplorer/logs/*/*"]
    type => "system"
    codec => multiline {
      pattern => "^\[+"
      negate => "true"
      what => "previous"
      charset => "UTF-8"
      auto_flush_interval => 2
    }
  }
  file {
    path => ["${CE_BASE}/cloudexplorer/logs/*/api/*"]
    type => "api"
    #start_position => "beginning"
    codec => json {charset => "UTF-8"}
  }          
}
#2.过滤格式化数据阶段
filter {
   if [type] == "api"{
    json {
     source => "message"
    }
   }
   if [type] == "system"{
     grok{
       match => {"message" =>"(?m)^\[%{INT:pid}\]%{SPACE}\[%{DATA:module}\]%{SPACE}%{SPACE}%{TIMESTAMP_ISO8601:createTime}%{SPACE}\[%{DATA:threadName}\]%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:javaClass}#%{GREEDYDATA:methodName}:%{GREEDYDATA:lineNumber}%{SPACE}-%{GREEDYDATA:msg}"}
     }
     }
   }
output { 
    if [type] == "system"{
       elasticsearch {
         hosts => ["${CE_LOGSTASH_ELASTICSEARCH_HOST}"]
         index => "ce-file-system-logs"
         #类型
         #document_type => "json_index"
       }
      # stdout {
      #  codec => rubydebug
      # }
    }
    if [type] == "api"{
       elasticsearch {
         hosts => ["${CE_LOGSTASH_ELASTICSEARCH_HOST}"]
         index => "ce-file-api-logs"
         #类型
         #document_type => "json_index"
       }
       #stdout {
       #  codec => rubydebug
       #}
    }
}
